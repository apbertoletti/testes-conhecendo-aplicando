using Calc.Lib;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Calculadora
{
    [TestClass]
    public class Calculos_Test
    {
        [TestMethod]
        public void C01()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, 2, '+');

            //Verificar
            Assert.AreEqual(12, resultado);
        }

        [TestMethod]
        public void C02()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-3, -5, '+');

            //Verificar
            Assert.AreEqual(-8, resultado);
        }

        [TestMethod]
        public void C03()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, -3, '+');

            //Verificar
            Assert.AreEqual(7, resultado);
        }

        [TestMethod]
        public void C04()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-5, 18, '+');

            //Verificar
            Assert.AreEqual(13, resultado);
        }

        [TestMethod]
        public void C05()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(0, 9, '+');

            //Verificar
            Assert.AreEqual(9, resultado);
        }

        [TestMethod]
        public void C06()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(9, 0, '+');

            //Verificar
            Assert.AreEqual(9, resultado);
        }

        [TestMethod]
        public void C07()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, 2, '-');

            //Verificar
            Assert.AreEqual(8, resultado);
        }

        [TestMethod]
        public void C08()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-3, -5, '-');

            //Verificar
            Assert.AreEqual(2, resultado);
        }

        [TestMethod]
        public void C09()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, -3, '-');

            //Verificar
            Assert.AreEqual(13, resultado);
        }

        [TestMethod]
        public void C10()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-5, 18, '-');

            //Verificar
            Assert.AreEqual(-23, resultado);
        }

        [TestMethod]
        public void C11()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(0, 9, '-');

            //Verificar
            Assert.AreEqual(-9, resultado);
        }

        [TestMethod]
        public void C12()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(9, 0, '-');

            //Verificar
            Assert.AreEqual(9, resultado);
        }

        [TestMethod]
        public void C13()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, 2, '*');

            //Verificar
            Assert.AreEqual(20, resultado);
        }

        [TestMethod]
        public void C14()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-3, -5, '*');

            //Verificar
            Assert.AreEqual(15, resultado);
        }

        [TestMethod]
        public void C15()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, -3, '*');

            //Verificar
            Assert.AreEqual(-30, resultado);
        }

        [TestMethod]
        public void C16()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-5, 18, '*');

            //Verificar
            Assert.AreEqual(-90, resultado);
        }

        [TestMethod]
        public void C17()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(0, 9, '*');

            //Verificar
            Assert.AreEqual(0, resultado);
        }

        [TestMethod]
        public void C18()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(9, 0, '*');

            //Verificar
            Assert.AreEqual(0, resultado);
        }

        [TestMethod]
        public void C19()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, 2, '/');

            //Verificar
            Assert.AreEqual(5, resultado);
        }

        [TestMethod]
        public void C20()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-3, -5, '/');

            //Verificar
            Assert.AreEqual(0.6m, resultado);
        }

        [TestMethod]
        public void C21()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(10, -5, '/');

            //Verificar
            Assert.AreEqual(-2, resultado);
        }

        [TestMethod]
        public void C22()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(-5, 20, '/');

            //Verificar
            Assert.AreEqual(-0.25m, resultado);
        }

        [TestMethod]
        public void C23()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(0, 9, '/');

            //Verificar
            Assert.AreEqual(0, resultado);
        }

        [TestMethod]
        public void C24()
        {
            //Preparar
            Calculos obj = new Calculos();

            //Executar (exercitar)
            decimal resultado = obj.EfetuarCalculo(9, 0, '/');

            //Verificar
            Assert.AreEqual(0, resultado);
        }
    }
}
